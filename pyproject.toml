# Copyright (c) [2024]
# [Institute of Energy Systems, Energy Efficiency and Energy Economics
#  TU Dortmund
#  Simon Kammerer (simon.kammerer@tu-dortmund.de)]
#
# MIT License
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.
# -----------------------------------------------------------------------------


[tool.poetry]
name = "watts-insight"
version = "1.2"
description = ""
authors = ["Simon Kammerer <simon.kammerer@volterica.com>"]
readme = "README.md"
packages = [{include = "factory_flexibility_model"}]

[tool.poetry.dependencies]
python = ">=3.11, <4"
dash = "^2.11.1"
dash-auth = "^1.4.1"
dash-bootstrap-components = "^1.4.2"
dash-bootstrap-templates = "^1.0.8"
datetime = "^5.2"
gurobipy = "^11.0.0"
joblib = "^1.3.1"
kivy = "^2.2.1"
kivymd = "^1.2.0"
kivy-garden-graph = "^0.4.0"
matplotlib = "^3.7.2"
numpy = "^1.25.2"
openpyxl = "^3.1.2"
pandas = "^2.0.3"
plotly = "^5.15.0"
scipy = "^1.11.1"
xlsxwriter = "^3.1.2"
pyyaml = "^6.0.1"
python-decouple = "^3.8"
sphinx = "^7.2.6"
sphinx-rtd-theme = "^1.3.0"


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.scripts]
gui = "dri_functions.gui:gui"
dashboard = "examples.main:dash"
simulate = "examples.main:simulate_session"
dri_iterate = "dri_functions.dri_simulation:iterate_dri_simulations"
dri_collect_results = "dri_functions.collect_results:collect_results"
